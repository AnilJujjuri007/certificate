import tkinter as tk
from tkinter import filedialog
from opcua import Client
from opcua import ua

# Specify the OPC UA server endpoint
opcua_endpoint = "opc.tcp://BLRTSL00330.lnties.com:53530/OPCUA/SimulationServer"

# Function to determine the type of a node
def get_node_type(node):
    if node.get_node_class() == ua.NodeClass.Object:
        children = node.get_children()
        print(f"{node.get_browse_name()} is an object having following child nodes:")
        for child in children:
            node_type = get_node_type(child)

    elif node.get_node_class() == ua.NodeClass.Variable:
        value = node.get_value()
        print(f"Node Name: {node.get_browse_name().Name}, NodeId: {node.nodeid}, Value: {value}")

# Function to upload and process a CSV file
def upload_and_process_csv():
    file_path = filedialog.askopenfilename(filetypes=[("CSV Files", "*.csv")])
    if file_path:
        try:
            with Client(opcua_endpoint) as client:
                client.connect()
                with open(file_path, 'r') as csvfile:
                    for row in csvfile:
                        node_id = row.strip()
                        try:
                            node = client.get_node(node_id)
                            node_type = get_node_type(node)
                            print(f"{node_id} is a {node_type}")
                        except Exception as e:
                            print(f"Error reading node {node_id}: {str(e)}")
                # Disconnect the OPC UA client after processing
                client.disconnect()
        except Exception as e:
            print(f"Error connecting to the OPC UA server: {str(e)}")

# Create a Tkinter window
window = tk.Tk()
window.title("CSV File Upload and OPC UA Processing")

# Create a button to trigger the file upload and processing
upload_button = tk.Button(window, text="Upload CSV File and Process", command=upload_and_process_csv)
upload_button.pack()

# Start the Tkinter main loop
window.mainloop()


Error reading node Node: ('Error parsing string Node', ValueError('not enough values to unpack (expected 2, got 1)'))
Node Name: Constant, NodeId: NumericNodeId(ns=3;i=1001), Value: None
ns=3;i=1001 is a None
Node Name: Counter, NodeId: NumericNodeId(ns=3;i=1002), Value: 28
ns=3;i=1002 is a None
Node Name: Random, NodeId: NumericNodeId(ns=3;i=1003), Value: -0.6216944
ns=3;i=1003 is a None
Node Name: Sawtooth, NodeId: NumericNodeId(ns=3;i=1004), Value: -1.6
ns=3;i=1004 is a None
Node Name: Sinusoid, NodeId: NumericNodeId(ns=3;i=1005), Value: -0.4158233
ns=3;i=1005 is a None
Node Name: Square, NodeId: NumericNodeId(ns=3;i=1006), Value: 2.0
ns=3;i=1006 is a None
Node Name: Triangle, NodeId: NumericNodeId(ns=3;i=1007), Value: -0.2666666
ns=3;i=1007 is a None
QualifiedName(3:energymeter) is an object having following child nodes:
QualifiedName(3:plc) is an object having following child nodes:
Node Name: current, NodeId: FourByteNodeId(ns=3;i=1011), Value: 122.6983
Node Name: voltage, NodeId: FourByteNodeId(ns=3;i=1012), Value: 118.9153
Node Name: power, NodeId: FourByteNodeId(ns=3;i=1013), Value: 351.1306
Node Name: energy, NodeId: FourByteNodeId(ns=3;i=1014), Value: 129.5899
QualifiedName(3:Data) is an object having following child nodes:
Node Name: conerter, NodeId: FourByteNodeId(ns=3;i=1016), Value: -0.6216944
Node Name: voltage, NodeId: FourByteNodeId(ns=3;i=1015), Value: 208.5972
ns=3;i=1008 is a None
QualifiedName(3:Data) is an object having following child nodes:
Node Name: conerter, NodeId: FourByteNodeId(ns=3;i=1016), Value: -0.6216944
ns=3;i=1010 is a None
Error reading node : Could not find identifier in string: 
Error connecting to the OPC UA server: [WinError 10038] An operation was attempted on something that is not a socket